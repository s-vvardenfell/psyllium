____________________________Архитектура____________________________
!!! Возможно, стоит сделать только сканнер: слишком большой объем работы иначе
	сделать зато весь функционал нужный, по апи любой клиент может работать со сканнером

Агент
	собирает данные на устройстве

	Принцип:
	каждые N времени проходится лог-файлам, указанным в конф
	тоже с процессами / программами и тд
	если нашлось что-то новое: запись и тд - складывает в файл мб зашифр
		необх помечать время последнего скана/чтения
		(тогда нужно восст-е из файла)
	отправляет коллектору сам по времени или в ответ на запрос - решить

Storage1
	получает данные от Агента во что-то быстрое/nosql

Storage2
	хранит обработанные данные / события

Collector
	анализирует инф-ю, генерирует отчеты
	загрузка файлов на вирус-тотал
		т.е. сначала скачивает его с хоста? не безопасно; скорее отправляет команду на это
		

____________________________Задачи____________________________

Наивная реализация Agent:
1. Чтение логов "старых" +
2. Чтение логов "новых"
3. Скан установленных программ / недавно уст-х
4. Скан запущенных процессов

Текущее:
	* Функционал Core - собирать инфу, хранить, соединяться с фронтом мб
	
	*Скан запущенных процессов
		Скан установл утилит/программ: юзеру не нужен nmap и тд
		Детект откуда запуск (для винды - подозрительно если из аппдаты)
		
	Скан конфигов ssh, не добавились ли новые ключи
		
	* Рефакторинг cmd, исп zerolog, вынести иниц-ю в функцию
	
	* считывать какие-то журналы линукса
		для этого надо почитать какие журналы вообще есть
		журнал подключений ssh

	* Сделать ключ --config или передачу параметров из ключей

	* какие под-команды нужны для cmd? или просто флаги для запуска разных фронтов и агентов-сборщиков

	* сущность, которая принимает NewLogsReader должна принимать его интерфейс

	* продумать подключение плагинов и функционал агента, сделать структуру, потестить подключение плагинов
	* куда класть плагины? стоит ли разнести репозитории?

	* Агент должен сам отправлять на сервер то, что собрал, а там кладется в бд
		 - чанками? по принципу времени или объёма?

3. Наивная реализация Storage: 
	выбрать бд
	мб ту с кот. не работал, не реляц и тд

	мб две
		одна - хранение сырого от Agent
		вторая - хранение обработанного Collector'ом

4. Наивная реализация Collector'a: 
	http-сервер
	принимает json-сообщение и просто отображает его в логе на экране
	исп zerolog, gorilla-mux
	отображает в 7W

8. Линтер, тесты, CI, docker, мб кубер, графана
____________________________Идеи____________________________
Протокол syslog
7W
Исп данные из перем окружения для паролей/ip и тд
Идеи-задачи из статьи вики
Подсмотреть функционал у MaxPatrol и тд
Что-то на С написать, мб что-то на питоне

исп апи на https://www.virustotal.com/gui/home/upload и другие беспланые сканеры в инете - для сканирования файлов на компе ; 
размыкатель цепи и проч; 
добавить функционал сначала спраш у сервера какие логи уже есть (на сколько прочитаны) а ;потом загружаем - т.е. синхронизация - по книге исп кафку в кач фронта в том числе 
Grafana и тд способы собирать метрики

мб отказаться от реализации для винды - долго - хотя более распр-я система, важнее









